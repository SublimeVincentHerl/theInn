resolvers docker
 nameserver dnsmasq 127.0.0.1:53

global
	#log /dev/log	local0
	#log /dev/log	local1 notice
	#chroot /var/lib/haproxy
	#stats socket /run/haproxy/admin.sock mode 660 level admin
	#stats timeout 30s
	user haproxy
	group haproxy
	daemon
	maxconn 2048

	# Default SSL material locations
	#ca-base /etc/ssl/certs
	#crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	#ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	#ssl-default-bind-options no-sslv3

	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	
	option forwardfor
	option http-server-close

	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend app-http
	bind *:80
	reqadd X-Forwarded-Proto:\ http

    # Define hosts
    acl host_front hdr(host) -i front.theinn.com
    acl host_back hdr(host) -i back.theinn.com

    ## figure out which one to use
    use_backend front if host_front
    use_backend back if host_back

frontend app-https
 	bind 0.0.0.0:443 ssl crt /etc/ssl/private/haproxy.pem
 	reqadd X-Forwarded-Proto:\ https

    # Define hosts
    acl host_front hdr(host) -i front.theinn.com
    acl host_back hdr(host) -i back.theinn.com

    ## figure out which one to use
    use_backend front if host_front
    use_backend back if host_back


backend front
	redirect scheme https if !{ ssl_fc }
	server node1 front:80 check resolvers docker resolve-prefer ipv4

backend back
	redirect scheme https if !{ ssl_fc }
	server node2 back:80 check resolvers docker resolve-prefer ipv4
